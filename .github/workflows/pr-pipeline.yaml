name: PR

on:
  pull_request:
    branches:
      - cicd
  workflow_dispatch:
jobs:
  pre-commit-checks:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
          pre-commit install

      - name: Run simplified pre-commit hooks
        run: |
          SKIP=pytest-check pre-commit run --all-files

  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    needs: pre-commit-checks

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          REGION=${{ vars.AWS_REGION }}
          ECR_REPOSITORY=${{ secrets.ECR_REGISTRY }}
          IMAGE_TAG=latest
          # Build the Docker image
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          # Tag the image
          ECR_URI=$(aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region $REGION --query "repositories[0].repositoryUri" --output text)
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_URI:$IMAGE_TAG

      - name: Push Docker image to Amazon ECR
        run: |
          docker push $ECR_URI:$IMAGE_TAG
