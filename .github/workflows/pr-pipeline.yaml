name: PR

on:
  pull_request:
    branches:
      - main

permissions:
  pull-requests: write

jobs:
  pr-checks:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v2

      - name: Setup cwltool
        run: |
          sudo apt update
          sudo apt install -y cwltool

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run simplified pre-commit hooks
        run: |
          SKIP=pytest-check uv run pre-commit run --all-files

      - name: Run unit tests
        run: |
          uv run pytest -vv --cov=src tests/ --cov-report xml:coverage/coverage.xml
        env:
          EODH__BASE_URL: ${{ vars.EODH__BASE_URL }}
          EODH__REALM: ${{ vars.EODH__REALM }}
          EODH__USERNAME: ${{ secrets.EODH__USERNAME }}
          EODH__PASSWORD: '${{ secrets.EODH__PASSWORD }}'
          EODH__CLIENT_ID: ${{ secrets.EODH__CLIENT_ID }}
          EODH__WORKSPACE_SERVICES_ENDPOINT: ${{ vars.EODH__WORKSPACE_SERVICES_ENDPOINT }}
          EODH__STAC_API_ENDPOINT: ${{ vars.EODH__STAC_API_ENDPOINT }}
          EODH__CEDA_STAC_CATALOG_PATH: ${{ vars.EODH__CEDA_STAC_CATALOG_PATH }}
          ADES__URL: ${{ vars.ADES__URL }}
          ADES__OGC_PROCESSES_API_PATH: ${{ vars.ADES__OGC_PROCESSES_API_PATH }}
          ADES__OGC_JOBS_API_PATH: ${{ vars.ADES__OGC_JOBS_API_PATH }}
          SENTINEL_HUB__CLIENT_ID: ${{ secrets.SENTINEL_HUB__CLIENT_ID }}
          SENTINEL_HUB__CLIENT_SECRET: ${{ secrets.SENTINEL_HUB__CLIENT_SECRET }}
          SENTINEL_HUB__TOKEN_URL: ${{ vars.SENTINEL_HUB__TOKEN_URL }}
          SENTINEL_HUB__STAC_API_ENDPOINT: ${{ vars.SENTINEL_HUB__STAC_API_ENDPOINT }}

      - name: Get code coverage
        uses: orgoro/coverage@v3.2
        with:
          coverageFile: coverage/coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          thresholdAll: 0.0
          thresholdNew: 0.0
          thresholdModified: 0.0
